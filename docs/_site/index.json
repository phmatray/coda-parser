{
  "api/CodaParser.Exceptions.InvalidValueException.html": {
    "href": "api/CodaParser.Exceptions.InvalidValueException.html",
    "title": "Class InvalidValueException | CodaParser Documentation",
    "keywords": "Class InvalidValueException Namespace CodaParser.Exceptions Assembly CodaParser.dll Exception indicating that there was an invalid value. public class InvalidValueException : Exception, ISerializable Inheritance object Exception InvalidValueException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidValueException(string, object, string) Initializes a new instance of the InvalidValueException class. public InvalidValueException(string type, object value, string errorMessage) Parameters type string The class that throws the exception. value object The value that is invalid. errorMessage string The message explaining why the value is invalid."
  },
  "api/CodaParser.Exceptions.html": {
    "href": "api/CodaParser.Exceptions.html",
    "title": "Namespace CodaParser.Exceptions | CodaParser Documentation",
    "keywords": "Namespace CodaParser.Exceptions Classes InvalidValueException Exception indicating that there was an invalid value."
  },
  "api/CodaParser.Helpers.html": {
    "href": "api/CodaParser.Helpers.html",
    "title": "Class Helpers | CodaParser Documentation",
    "keywords": "Class Helpers Namespace CodaParser Assembly CodaParser.dll Class with helper methods. public static class Helpers Inheritance object Helpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterLinesOfTypes(IEnumerable<ILine>, IEnumerable<LineType>) Get a list of all the lines that are of the requested LineType type. public static IEnumerable<ILine> FilterLinesOfTypes(IEnumerable<ILine> lines, IEnumerable<LineType> types) Parameters lines IEnumerable<ILine> The lines to filter. types IEnumerable<LineType> The types to filter out. Returns IEnumerable<ILine> The filtered list of ILine. FormatDateString(string) Convert a coda date to an iso format. public static string FormatDateString(string dateCoda) Parameters dateCoda string The date in format ddMMyy. Returns string The date in the format yyyy-MM-dd. GetFirstLineOfType<T>(IEnumerable<ILine>) Gets the first line that matches the requested type. public static T? GetFirstLineOfType<T>(IEnumerable<ILine> lines) where T : ILine Parameters lines IEnumerable<ILine> The lines to filter. Returns T The first line that matches the T or null Type Parameters T The type to filter for. GetTrimmedData(string, int) Get a part of the input string starting from the requested position till the end and trim the spaces before returning the result. public static string GetTrimmedData(string data, int startPosition) Parameters data string The value to get the substring from. startPosition int The starting position for getting the substring. Returns string The trimmed data from the input. GetTrimmedData(string, int, int) Get a part of the input string and trim the spaces before returning the result. public static string GetTrimmedData(string data, int startPosition, int length) Parameters data string The value to get the substring from. startPosition int The starting position for getting the substring. length int The number of characters to get from the data. Returns string The trimmed requested part of the input. TrimSpace(string) Remove duplicate spaces from the start en end of the input string, leaving only an optional single space. public static string TrimSpace(string value) Parameters value string The data to process. Returns string The value without duplicate spaces in the beginning and end. ValidateStringDigitOnly(string, string) Validate that the input string only contains digits, throwing an exception if it doesn't. public static void ValidateStringDigitOnly(string value, string typeName) Parameters value string The value to check. typeName string The type that needs this check, used in the exception. ValidateStringLength(string, int, string) Validate that the input string is exactly the requested length, throwing an exception if it doesn't. public static void ValidateStringLength(string value, int expectedLength, string typeName) Parameters value string The value to check. expectedLength int The expected length of the value. typeName string The type that needs this check, used in the exception. ValidateStringMultipleLengths(string, IEnumerable<int>, string) Validate that the input string is exactly one of the requested lengths, throwing an exception if it doesn't. public static void ValidateStringMultipleLengths(string value, IEnumerable<int> expectedLengthArray, string typeName) Parameters value string The value to check. expectedLengthArray IEnumerable<int> A list of excepted lengths of the value. typeName string The type that needs this check, used in the exception."
  },
  "api/CodaParser.IParser-1.html": {
    "href": "api/CodaParser.IParser-1.html",
    "title": "Interface IParser<T> | CodaParser Documentation",
    "keywords": "Interface IParser<T> Namespace CodaParser Assembly CodaParser.dll Interface for parsing list of string or a file to a specific type. public interface IParser<out T> Type Parameters T The result type of the parsing. Methods Parse(IEnumerable<string>) Parse a list of strings to their mathing type. IEnumerable<out T> Parse(IEnumerable<string> codaLines) Parameters codaLines IEnumerable<string> The strings to parse. Returns IEnumerable<T> The parsed result. ParseFile(string) Read the content of the requested file and parse the content to the matching type. IEnumerable<out T> ParseFile(string codaFile) Parameters codaFile string Location of the file to parse. Returns IEnumerable<T> The parsed result."
  },
  "api/CodaParser.LineParsers.EndSummaryLineParser.html": {
    "href": "api/CodaParser.LineParsers.EndSummaryLineParser.html",
    "title": "Class EndSummaryLineParser | CodaParser Documentation",
    "keywords": "Class EndSummaryLineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the trailing record of a transaction. public class EndSummaryLineParser : ILineParser Inheritance object EndSummaryLineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.ILineParser.html": {
    "href": "api/CodaParser.LineParsers.ILineParser.html",
    "title": "Interface ILineParser | CodaParser Documentation",
    "keywords": "Interface ILineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll Interface for line parsers. public interface ILineParser Methods CanAcceptString(string) Check if the parser take into account this type of line. bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.IdentificationLineParser.html": {
    "href": "api/CodaParser.LineParsers.IdentificationLineParser.html",
    "title": "Class IdentificationLineParser | CodaParser Documentation",
    "keywords": "Class IdentificationLineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the header record of the transaction. public class IdentificationLineParser : ILineParser Inheritance object IdentificationLineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.InformationPart1LineParser.html": {
    "href": "api/CodaParser.LineParsers.InformationPart1LineParser.html",
    "title": "Class InformationPart1LineParser | CodaParser Documentation",
    "keywords": "Class InformationPart1LineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the first information line part. public class InformationPart1LineParser : ILineParser Inheritance object InformationPart1LineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.InformationPart2LineParser.html": {
    "href": "api/CodaParser.LineParsers.InformationPart2LineParser.html",
    "title": "Class InformationPart2LineParser | CodaParser Documentation",
    "keywords": "Class InformationPart2LineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the second type information line part. public class InformationPart2LineParser : ILineParser Inheritance object InformationPart2LineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.InformationPart3LineParser.html": {
    "href": "api/CodaParser.LineParsers.InformationPart3LineParser.html",
    "title": "Class InformationPart3LineParser | CodaParser Documentation",
    "keywords": "Class InformationPart3LineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the third type information line part. public class InformationPart3LineParser : ILineParser Inheritance object InformationPart3LineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.InitialStateLineParser.html": {
    "href": "api/CodaParser.LineParsers.InitialStateLineParser.html",
    "title": "Class InitialStateLineParser | CodaParser Documentation",
    "keywords": "Class InitialStateLineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the first initial state of the balance. public class InitialStateLineParser : ILineParser Inheritance object InitialStateLineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.MessageLineParser.html": {
    "href": "api/CodaParser.LineParsers.MessageLineParser.html",
    "title": "Class MessageLineParser | CodaParser Documentation",
    "keywords": "Class MessageLineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the free communication lines. public class MessageLineParser : ILineParser Inheritance object MessageLineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.NewStateLineParser.html": {
    "href": "api/CodaParser.LineParsers.NewStateLineParser.html",
    "title": "Class NewStateLineParser | CodaParser Documentation",
    "keywords": "Class NewStateLineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the final state of the balance. public class NewStateLineParser : ILineParser Inheritance object NewStateLineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.TransactionPart1LineParser.html": {
    "href": "api/CodaParser.LineParsers.TransactionPart1LineParser.html",
    "title": "Class TransactionPart1LineParser | CodaParser Documentation",
    "keywords": "Class TransactionPart1LineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the transaction movement information line part. public class TransactionPart1LineParser : ILineParser Inheritance object TransactionPart1LineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.TransactionPart2LineParser.html": {
    "href": "api/CodaParser.LineParsers.TransactionPart2LineParser.html",
    "title": "Class TransactionPart2LineParser | CodaParser Documentation",
    "keywords": "Class TransactionPart2LineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the second transaction movement information line part. public class TransactionPart2LineParser : ILineParser Inheritance object TransactionPart2LineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.TransactionPart3LineParser.html": {
    "href": "api/CodaParser.LineParsers.TransactionPart3LineParser.html",
    "title": "Class TransactionPart3LineParser | CodaParser Documentation",
    "keywords": "Class TransactionPart3LineParser Namespace CodaParser.LineParsers Assembly CodaParser.dll The parser for the third transaction movement information line part. public class TransactionPart3LineParser : ILineParser Inheritance object TransactionPart3LineParser Implements ILineParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanAcceptString(string) Check if the parser take into account this type of line. public bool CanAcceptString(string codaLine) Parameters codaLine string The line to check if parsable. Returns bool True if this parser can parse this line. Parse(string) Parse the given string into a more readable object. public ILine Parse(string codaLine) Parameters codaLine string The line to parse. Returns ILine The parsed content of the line."
  },
  "api/CodaParser.LineParsers.html": {
    "href": "api/CodaParser.LineParsers.html",
    "title": "Namespace CodaParser.LineParsers | CodaParser Documentation",
    "keywords": "Namespace CodaParser.LineParsers Classes EndSummaryLineParser The parser for the trailing record of a transaction. IdentificationLineParser The parser for the header record of the transaction. InformationPart1LineParser The parser for the first information line part. InformationPart2LineParser The parser for the second type information line part. InformationPart3LineParser The parser for the third type information line part. InitialStateLineParser The parser for the first initial state of the balance. MessageLineParser The parser for the free communication lines. NewStateLineParser The parser for the final state of the balance. TransactionPart1LineParser The parser for the transaction movement information line part. TransactionPart2LineParser The parser for the second transaction movement information line part. TransactionPart3LineParser The parser for the third transaction movement information line part. Interfaces ILineParser Interface for line parsers."
  },
  "api/CodaParser.Lines.EndSummaryLine.html": {
    "href": "api/CodaParser.Lines.EndSummaryLine.html",
    "title": "Class EndSummaryLine | CodaParser Documentation",
    "keywords": "Class EndSummaryLine Namespace CodaParser.Lines Assembly CodaParser.dll The details of the trailer record. public class EndSummaryLine : ILine Inheritance object EndSummaryLine Implements ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EndSummaryLine(Amount, Amount) Initializes a new instance of the EndSummaryLine class. public EndSummaryLine(Amount debetAmount, Amount creditAmount) Parameters debetAmount Amount The debit movement. creditAmount Amount The credit movement. Properties CreditAmount Gets the credit movement. public Amount CreditAmount { get; } Property Value Amount DebetAmount Gets the debit movement. public Amount DebetAmount { get; } Property Value Amount Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.IInformationOrTransactionLine.html": {
    "href": "api/CodaParser.Lines.IInformationOrTransactionLine.html",
    "title": "Interface IInformationOrTransactionLine | CodaParser Documentation",
    "keywords": "Interface IInformationOrTransactionLine Namespace CodaParser.Lines Assembly CodaParser.dll Information about an information or a transaction line. public interface IInformationOrTransactionLine : ILine Inherited Members ILine.GetLineType() Properties Message Gets the message. Message? Message { get; } Property Value Message SequenceNumber Gets the sequence number. SequenceNumber SequenceNumber { get; } Property Value SequenceNumber"
  },
  "api/CodaParser.Lines.ILine.html": {
    "href": "api/CodaParser.Lines.ILine.html",
    "title": "Interface ILine | CodaParser Documentation",
    "keywords": "Interface ILine Namespace CodaParser.Lines Assembly CodaParser.dll Information about a line in a coda format. public interface ILine Methods GetLineType() Gets the type of the line. LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.IdentificationLine.html": {
    "href": "api/CodaParser.Lines.IdentificationLine.html",
    "title": "Class IdentificationLine | CodaParser Documentation",
    "keywords": "Class IdentificationLine Namespace CodaParser.Lines Assembly CodaParser.dll The contents of the header record. public class IdentificationLine : ILine Inheritance object IdentificationLine Implements ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IdentificationLine(Date, BankIdentificationNumber, bool, ApplicationCode, FileReference, AccountName, Bic, CompanyIdentificationNumber, ExternalApplicationCode, TransactionReference, RelatedReference, VersionCode) Initializes a new instance of the IdentificationLine class. public IdentificationLine(Date creationDate, BankIdentificationNumber bankIdentificationNumber, bool isDuplicate, ApplicationCode applicationCode, FileReference fileReference, AccountName accountName, Bic accountBic, CompanyIdentificationNumber accountCompanyIdentificationNumber, ExternalApplicationCode externalApplicationCode, TransactionReference transactionReference, RelatedReference relatedReference, VersionCode versionCode) Parameters creationDate Date The creation date. bankIdentificationNumber BankIdentificationNumber The bank identification number or zeros. isDuplicate bool Indication for duplicity. applicationCode ApplicationCode The application code fileReference FileReference File reference as determined by the bank or blank accountName AccountName Name addressee accountBic Bic Bic of the bank holding the account. accountCompanyIdentificationNumber CompanyIdentificationNumber Identification number of the Belgium-based account holder externalApplicationCode ExternalApplicationCode code \"seperate application\" transactionReference TransactionReference Transaction reference or blank. relatedReference RelatedReference Related reference or blank. versionCode VersionCode The version code. Properties AccountBic Gets the bic of the bank holding the account. public Bic AccountBic { get; } Property Value Bic AccountCompanyIdentificationNumber Gets the identification number of the Belgium-based account holder. public CompanyIdentificationNumber AccountCompanyIdentificationNumber { get; } Property Value CompanyIdentificationNumber AccountName Gets the name addressee public AccountName AccountName { get; } Property Value AccountName ApplicationCode Gets the application code public ApplicationCode ApplicationCode { get; } Property Value ApplicationCode BankIdentificationNumber Gets the bank identification number or zeros. public BankIdentificationNumber BankIdentificationNumber { get; } Property Value BankIdentificationNumber CreationDate Gets the creation date. public Date CreationDate { get; } Property Value Date ExternalApplicationCode Gets the code \"seperate application\" public ExternalApplicationCode ExternalApplicationCode { get; } Property Value ExternalApplicationCode FileReference Gets the file reference as determined by the bank or blank public FileReference FileReference { get; } Property Value FileReference IsDuplicate Gets a value indicating whether there is duplicity. public bool IsDuplicate { get; } Property Value bool RelatedReference Gets the related reference or blank. public RelatedReference RelatedReference { get; } Property Value RelatedReference TransactionReference Gets the transaction reference or blank. public TransactionReference TransactionReference { get; } Property Value TransactionReference VersionCode Gets the version code. public VersionCode VersionCode { get; } Property Value VersionCode Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.InformationPart1Line.html": {
    "href": "api/CodaParser.Lines.InformationPart1Line.html",
    "title": "Class InformationPart1Line | CodaParser Documentation",
    "keywords": "Class InformationPart1Line Namespace CodaParser.Lines Assembly CodaParser.dll Information about a line. public class InformationPart1Line : IInformationOrTransactionLine, ILine Inheritance object InformationPart1Line Implements IInformationOrTransactionLine ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InformationPart1Line(SequenceNumber, SequenceNumberDetail, BankReference, TransactionCode, MessageOrStructuredMessage) Initializes a new instance of the InformationPart1Line class. public InformationPart1Line(SequenceNumber sequenceNumber, SequenceNumberDetail sequenceNumberDetail, BankReference bankReference, TransactionCode transactionCode, MessageOrStructuredMessage messageOrStructuredMessage) Parameters sequenceNumber SequenceNumber The continous sequence number sequenceNumberDetail SequenceNumberDetail The detail number. bankReference BankReference The reference number added by the bank. transactionCode TransactionCode The transaction code. messageOrStructuredMessage MessageOrStructuredMessage The communication in structured or unstructered format. Properties BankReference Gets the reference number added by the bank. public BankReference BankReference { get; } Property Value BankReference MessageOrStructuredMessage Gets the communication in structured or unstructered format. public MessageOrStructuredMessage MessageOrStructuredMessage { get; } Property Value MessageOrStructuredMessage SequenceNumber Gets the sequence number. public SequenceNumber SequenceNumber { get; } Property Value SequenceNumber SequenceNumberDetail Gets the detail number. public SequenceNumberDetail SequenceNumberDetail { get; } Property Value SequenceNumberDetail TransactionCode Gets the transaction code. public TransactionCode TransactionCode { get; } Property Value TransactionCode Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.InformationPart2Line.html": {
    "href": "api/CodaParser.Lines.InformationPart2Line.html",
    "title": "Class InformationPart2Line | CodaParser Documentation",
    "keywords": "Class InformationPart2Line Namespace CodaParser.Lines Assembly CodaParser.dll Continued information about a line. public class InformationPart2Line : IInformationOrTransactionLine, ILine Inheritance object InformationPart2Line Implements IInformationOrTransactionLine ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InformationPart2Line(SequenceNumber, SequenceNumberDetail, Message) Initializes a new instance of the InformationPart2Line class. public InformationPart2Line(SequenceNumber sequenceNumber, SequenceNumberDetail sequenceNumberDetail, Message message) Parameters sequenceNumber SequenceNumber The continuous sequence number. sequenceNumberDetail SequenceNumberDetail The detail number. message Message The communication. Properties Message Gets the message. public Message? Message { get; } Property Value Message SequenceNumber Gets the sequence number. public SequenceNumber SequenceNumber { get; } Property Value SequenceNumber SequenceNumberDetail Gets the detail number. public SequenceNumberDetail SequenceNumberDetail { get; } Property Value SequenceNumberDetail Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.InformationPart3Line.html": {
    "href": "api/CodaParser.Lines.InformationPart3Line.html",
    "title": "Class InformationPart3Line | CodaParser Documentation",
    "keywords": "Class InformationPart3Line Namespace CodaParser.Lines Assembly CodaParser.dll Last line with information about a line. public class InformationPart3Line : IInformationOrTransactionLine, ILine Inheritance object InformationPart3Line Implements IInformationOrTransactionLine ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InformationPart3Line(SequenceNumber, SequenceNumberDetail, Message) Initializes a new instance of the InformationPart3Line class. public InformationPart3Line(SequenceNumber sequenceNumber, SequenceNumberDetail sequenceNumberDetail, Message message) Parameters sequenceNumber SequenceNumber The continuous sequence number. sequenceNumberDetail SequenceNumberDetail The detail number. message Message The communication. Properties Message Gets the message. public Message? Message { get; } Property Value Message SequenceNumber Gets the sequence number. public SequenceNumber SequenceNumber { get; } Property Value SequenceNumber SequenceNumberDetail Gets the detail number. public SequenceNumberDetail SequenceNumberDetail { get; } Property Value SequenceNumberDetail Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.InitialStateLine.html": {
    "href": "api/CodaParser.Lines.InitialStateLine.html",
    "title": "Class InitialStateLine | CodaParser Documentation",
    "keywords": "Class InitialStateLine Namespace CodaParser.Lines Assembly CodaParser.dll Initial state of the balance. public class InitialStateLine : ILine Inheritance object InitialStateLine Implements ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InitialStateLine(PaperStatementSequenceNumber, StatementSequenceNumber, Account, Amount, Date) Initializes a new instance of the InitialStateLine class. public InitialStateLine(PaperStatementSequenceNumber paperStatementSequenceNumber, StatementSequenceNumber statementSequenceNumber, Account account, Amount balance, Date date) Parameters paperStatementSequenceNumber PaperStatementSequenceNumber The sequence number statement of account on paper or Julian date or zeros. statementSequenceNumber StatementSequenceNumber The sequence number of the coded statement of account or zeros. account Account The account. balance Amount The old balance. date Date The date of the balance. Properties Account Gets the account. public Account Account { get; } Property Value Account Balance Gets the balance. public Amount Balance { get; } Property Value Amount Date Gets the date. public Date Date { get; } Property Value Date PaperStatementSequenceNumber Gets the sequence number statement of account on paper. public PaperStatementSequenceNumber PaperStatementSequenceNumber { get; } Property Value PaperStatementSequenceNumber StatementSequenceNumber Gets the sequence number of the coded statement. public StatementSequenceNumber StatementSequenceNumber { get; } Property Value StatementSequenceNumber Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.LineType.html": {
    "href": "api/CodaParser.Lines.LineType.html",
    "title": "Enum LineType | CodaParser Documentation",
    "keywords": "Enum LineType Namespace CodaParser.Lines Assembly CodaParser.dll The type of a line. public enum LineType Fields EndSummary = 90 The trailer record (90). Identification = 0 The header record (00). InformationPart1 = 31 The first information record (31). InformationPart2 = 32 The second information record (32). InformationPart3 = 33 The third information record (33). InitialState = 10 The old balance record (10). Message = 40 The free communication record (40). NewState = 80 The new balance record (80). TransactionPart1 = 21 The first movement record (21). TransactionPart2 = 22 The second movement record (22). TransactionPart3 = 23 The thrid movement record (23)."
  },
  "api/CodaParser.Lines.MessageLine.html": {
    "href": "api/CodaParser.Lines.MessageLine.html",
    "title": "Class MessageLine | CodaParser Documentation",
    "keywords": "Class MessageLine Namespace CodaParser.Lines Assembly CodaParser.dll The free communication. public class MessageLine : ILine Inheritance object MessageLine Implements ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MessageLine(SequenceNumber, SequenceNumberDetail, Message) Initializes a new instance of the MessageLine class. public MessageLine(SequenceNumber sequenceNumber, SequenceNumberDetail sequenceNumberDetail, Message content) Parameters sequenceNumber SequenceNumber The continous sequence number. sequenceNumberDetail SequenceNumberDetail The detail number. content Message The text of the free communication. Properties Content Gets the text of the free communication. public Message Content { get; } Property Value Message SequenceNumber Gets the continous sequence number. public SequenceNumber SequenceNumber { get; } Property Value SequenceNumber SequenceNumberDetail Gets the detail number. public SequenceNumberDetail SequenceNumberDetail { get; } Property Value SequenceNumberDetail Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.NewStateLine.html": {
    "href": "api/CodaParser.Lines.NewStateLine.html",
    "title": "Class NewStateLine | CodaParser Documentation",
    "keywords": "Class NewStateLine Namespace CodaParser.Lines Assembly CodaParser.dll The new state of the balance. public class NewStateLine : ILine Inheritance object NewStateLine Implements ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NewStateLine(StatementSequenceNumber, AccountFull, Amount, Date) Initializes a new instance of the NewStateLine class. public NewStateLine(StatementSequenceNumber statementSequenceNumber, AccountFull account, Amount balance, Date date) Parameters statementSequenceNumber StatementSequenceNumber The sequence number statement of account on paper. account AccountFull The account. balance Amount The new balance. date Date The new balance date. Properties Account Gets the account. public AccountFull Account { get; } Property Value AccountFull Balance Gets the balance. public Amount Balance { get; } Property Value Amount Date Gets the date. public Date Date { get; } Property Value Date StatementSequenceNumber Gets the sequence number statement of account on paper. public StatementSequenceNumber StatementSequenceNumber { get; } Property Value StatementSequenceNumber Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.TransactionPart1Line.html": {
    "href": "api/CodaParser.Lines.TransactionPart1Line.html",
    "title": "Class TransactionPart1Line | CodaParser Documentation",
    "keywords": "Class TransactionPart1Line Namespace CodaParser.Lines Assembly CodaParser.dll Information about the movement. public class TransactionPart1Line : IInformationOrTransactionLine, ILine Inheritance object TransactionPart1Line Implements IInformationOrTransactionLine ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionPart1Line(SequenceNumber, SequenceNumberDetail, BankReference, Amount, Date, TransactionCode, MessageOrStructuredMessage, Date, StatementSequenceNumber, GlobalizationCode) Initializes a new instance of the TransactionPart1Line class. public TransactionPart1Line(SequenceNumber sequenceNumber, SequenceNumberDetail sequenceNumberDetail, BankReference bankReference, Amount amount, Date valutaDate, TransactionCode transactionCode, MessageOrStructuredMessage messageOrStructuredMessage, Date transactionDate, StatementSequenceNumber statementSequenceNumber, GlobalizationCode globalizationCode) Parameters sequenceNumber SequenceNumber The continious sequence number. sequenceNumberDetail SequenceNumberDetail The detail number. bankReference BankReference The reference number of the bank. amount Amount The amount. valutaDate Date The value date. transactionCode TransactionCode The transaction code. messageOrStructuredMessage MessageOrStructuredMessage The communication, structured or unstructured. transactionDate Date The entry date. statementSequenceNumber StatementSequenceNumber The sequence number statement of account on paper. globalizationCode GlobalizationCode The globalization code. Properties Amount Gets the amount. public Amount Amount { get; } Property Value Amount BankReference Gets the reference number of the bank. public BankReference BankReference { get; } Property Value BankReference GlobalizationCode Gets the globalization code. public GlobalizationCode GlobalizationCode { get; } Property Value GlobalizationCode MessageOrStructuredMessage Gets the communication, structured or unstructured. public MessageOrStructuredMessage MessageOrStructuredMessage { get; } Property Value MessageOrStructuredMessage SequenceNumber Gets the sequence number. public SequenceNumber SequenceNumber { get; } Property Value SequenceNumber SequenceNumberDetail Gets the detail number. public SequenceNumberDetail SequenceNumberDetail { get; } Property Value SequenceNumberDetail StatementSequenceNumber Gets the sequence number statement of account on paper. public StatementSequenceNumber StatementSequenceNumber { get; } Property Value StatementSequenceNumber TransactionCode Gets the transaction code. public TransactionCode TransactionCode { get; } Property Value TransactionCode TransactionDate Gets the entry date. public Date TransactionDate { get; } Property Value Date ValutaDate Gets the value date. public Date ValutaDate { get; } Property Value Date Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.TransactionPart2Line.html": {
    "href": "api/CodaParser.Lines.TransactionPart2Line.html",
    "title": "Class TransactionPart2Line | CodaParser Documentation",
    "keywords": "Class TransactionPart2Line Namespace CodaParser.Lines Assembly CodaParser.dll Continued information about the movement. public class TransactionPart2Line : IInformationOrTransactionLine, ILine Inheritance object TransactionPart2Line Implements IInformationOrTransactionLine ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionPart2Line(SequenceNumber, SequenceNumberDetail, Message, ClientReference, Bic, TransactionCodeType, IsoReasonReturnCode, CategoryPurpose, Purpose) Initializes a new instance of the TransactionPart2Line class. public TransactionPart2Line(SequenceNumber sequenceNumber, SequenceNumberDetail sequenceNumberDetail, Message message, ClientReference clientReference, Bic otherAccountBic, TransactionCodeType transactionType, IsoReasonReturnCode isoReasonReturnCode, CategoryPurpose categoryPurpose, Purpose purpose) Parameters sequenceNumber SequenceNumber The continuous sequence number. sequenceNumberDetail SequenceNumberDetail The detail number. message Message The communication. clientReference ClientReference The customer reference. otherAccountBic Bic The bic of the counterparty's bank. transactionType TransactionCodeType The type of the transaction. isoReasonReturnCode IsoReasonReturnCode The reason return code in iso format. categoryPurpose CategoryPurpose The category of the purpose. purpose Purpose The purpose. Properties CategoryPurpose Gets the category of the purpose. public CategoryPurpose CategoryPurpose { get; } Property Value CategoryPurpose ClientReference Gets the customer reference. public ClientReference ClientReference { get; } Property Value ClientReference IsoReasonReturnCode Gets the reason return code in iso format. public IsoReasonReturnCode IsoReasonReturnCode { get; } Property Value IsoReasonReturnCode Message Gets the message. public Message? Message { get; } Property Value Message OtherAccountBic Gets the bic of the counterparty's bank. public Bic OtherAccountBic { get; } Property Value Bic Purpose Gets the purpose. public Purpose Purpose { get; } Property Value Purpose SequenceNumber Gets the sequence number. public SequenceNumber SequenceNumber { get; } Property Value SequenceNumber SequenceNumberDetail Gets the detail number. public SequenceNumberDetail SequenceNumberDetail { get; } Property Value SequenceNumberDetail TransactionType Gets the type of the transaction. public TransactionCodeType TransactionType { get; } Property Value TransactionCodeType Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.TransactionPart3Line.html": {
    "href": "api/CodaParser.Lines.TransactionPart3Line.html",
    "title": "Class TransactionPart3Line | CodaParser Documentation",
    "keywords": "Class TransactionPart3Line Namespace CodaParser.Lines Assembly CodaParser.dll Continued information about the movement. public class TransactionPart3Line : IInformationOrTransactionLine, ILine Inheritance object TransactionPart3Line Implements IInformationOrTransactionLine ILine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionPart3Line(SequenceNumber, SequenceNumberDetail, AccountFull, AccountName, Message) Initializes a new instance of the TransactionPart3Line class. public TransactionPart3Line(SequenceNumber sequenceNumber, SequenceNumberDetail sequenceNumberDetail, AccountFull otherAccountNumberAndCurrency, AccountName otherAccountName, Message message) Parameters sequenceNumber SequenceNumber The continuous sequence number. sequenceNumberDetail SequenceNumberDetail The detail number. otherAccountNumberAndCurrency AccountFull The counterparty's account number and currency code. otherAccountName AccountName The counterparty's name. message Message The communication. Properties Message Gets the message. public Message? Message { get; } Property Value Message OtherAccountName Gets the counterparty's name. public AccountName OtherAccountName { get; } Property Value AccountName OtherAccountNumberAndCurrency Gets the counterparty's account number and currency code. public AccountFull OtherAccountNumberAndCurrency { get; } Property Value AccountFull SequenceNumber Gets the sequence number. public SequenceNumber SequenceNumber { get; } Property Value SequenceNumber SequenceNumberDetail The detail number. public SequenceNumberDetail SequenceNumberDetail { get; } Property Value SequenceNumberDetail Methods GetLineType() Gets the type of the line. public LineType GetLineType() Returns LineType The type that this line represents."
  },
  "api/CodaParser.Lines.html": {
    "href": "api/CodaParser.Lines.html",
    "title": "Namespace CodaParser.Lines | CodaParser Documentation",
    "keywords": "Namespace CodaParser.Lines Classes EndSummaryLine The details of the trailer record. IdentificationLine The contents of the header record. InformationPart1Line Information about a line. InformationPart2Line Continued information about a line. InformationPart3Line Last line with information about a line. InitialStateLine Initial state of the balance. MessageLine The free communication. NewStateLine The new state of the balance. TransactionPart1Line Information about the movement. TransactionPart2Line Continued information about the movement. TransactionPart3Line Continued information about the movement. Interfaces IInformationOrTransactionLine Information about an information or a transaction line. ILine Information about a line in a coda format. Enums LineType The type of a line."
  },
  "api/CodaParser.LinesParser.html": {
    "href": "api/CodaParser.LinesParser.html",
    "title": "Class LinesParser | CodaParser Documentation",
    "keywords": "Class LinesParser Namespace CodaParser Assembly CodaParser.dll Parse raw strings to a structured line. public class LinesParser : IParser<ILine> Inheritance object LinesParser Implements IParser<ILine> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LinesParser() Initializes a new instance of the LinesParser class. public LinesParser() Methods Parse(IEnumerable<string>) Parse a list of strings to their mathing type. public IEnumerable<ILine> Parse(IEnumerable<string> codaLines) Parameters codaLines IEnumerable<string> The strings to parse. Returns IEnumerable<ILine> The parsed result. ParseFile(string) Read the content of the requested file and parse the content to the matching type. public IEnumerable<ILine> ParseFile(string codaFile) Parameters codaFile string Location of the file to parse. Returns IEnumerable<ILine> The parsed result."
  },
  "api/CodaParser.Parser.html": {
    "href": "api/CodaParser.Parser.html",
    "title": "Class Parser | CodaParser Documentation",
    "keywords": "Class Parser Namespace CodaParser Assembly CodaParser.dll Parse raw lines to statements. public class Parser : IParser<Statement> Inheritance object Parser Implements IParser<Statement> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Parser() Initializes a new instance of the Parser class. public Parser() Methods GroupTransactionsPerStatement(IEnumerable<ILine>) Group lines of the same transaction togeter. public IEnumerable<IEnumerable<ILine>> GroupTransactionsPerStatement(IEnumerable<ILine> lines) Parameters lines IEnumerable<ILine> The lines to group. Returns IEnumerable<IEnumerable<ILine>> A list of multiple lines that belong together. Parse(IEnumerable<string>) Parse a list of strings to their mathing type. public IEnumerable<Statement> Parse(IEnumerable<string> codaLines) Parameters codaLines IEnumerable<string> The strings to parse. Returns IEnumerable<Statement> The parsed result. ParseFile(string) Read the content of the requested file and parse the content to the matching type. public IEnumerable<Statement> ParseFile(string codaFile) Parameters codaFile string Location of the file to parse. Returns IEnumerable<Statement> The parsed result."
  },
  "api/CodaParser.StatementParsers.AccountOtherPartyParser.html": {
    "href": "api/CodaParser.StatementParsers.AccountOtherPartyParser.html",
    "title": "Class AccountOtherPartyParser | CodaParser Documentation",
    "keywords": "Class AccountOtherPartyParser Namespace CodaParser.StatementParsers Assembly CodaParser.dll Parser for the account of the other party. public class AccountOtherPartyParser Inheritance object AccountOtherPartyParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(IEnumerable<ILine>) Parse the relevant lines to a AccountOtherParty. public AccountOtherParty Parse(IEnumerable<ILine> lines) Parameters lines IEnumerable<ILine> The lines with the information. Returns AccountOtherParty The account of the other party."
  },
  "api/CodaParser.StatementParsers.AccountParser.html": {
    "href": "api/CodaParser.StatementParsers.AccountParser.html",
    "title": "Class AccountParser | CodaParser Documentation",
    "keywords": "Class AccountParser Namespace CodaParser.StatementParsers Assembly CodaParser.dll Parser for the account. public class AccountParser Inheritance object AccountParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(IEnumerable<ILine>) Parse the relevant lines in an Account. public Account Parse(IEnumerable<ILine> lines) Parameters lines IEnumerable<ILine> The lines to parse. Returns Account The account of the customer."
  },
  "api/CodaParser.StatementParsers.MessageParser.html": {
    "href": "api/CodaParser.StatementParsers.MessageParser.html",
    "title": "Class MessageParser | CodaParser Documentation",
    "keywords": "Class MessageParser Namespace CodaParser.StatementParsers Assembly CodaParser.dll Parser for the message. public class MessageParser Inheritance object MessageParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(IEnumerable<MessageLine>) Parse the relevant message lines into a single message. public string Parse(IEnumerable<MessageLine> lines) Parameters lines IEnumerable<MessageLine> The lines to parse. Returns string The message."
  },
  "api/CodaParser.StatementParsers.StatementParser.html": {
    "href": "api/CodaParser.StatementParsers.StatementParser.html",
    "title": "Class StatementParser | CodaParser Documentation",
    "keywords": "Class StatementParser Namespace CodaParser.StatementParsers Assembly CodaParser.dll Parser of a single statement. public class StatementParser Inheritance object StatementParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(IEnumerable<ILine>) Parse the lines into a Statement. public Statement Parse(IEnumerable<ILine> lines) Parameters lines IEnumerable<ILine> The lines to parse. Returns Statement A single Statement."
  },
  "api/CodaParser.StatementParsers.TransactionParser.html": {
    "href": "api/CodaParser.StatementParsers.TransactionParser.html",
    "title": "Class TransactionParser | CodaParser Documentation",
    "keywords": "Class TransactionParser Namespace CodaParser.StatementParsers Assembly CodaParser.dll Parser of a transaction. public class TransactionParser Inheritance object TransactionParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(IEnumerable<ILine>) Parse the relevant lines into a Transaction. public Transaction Parse(IEnumerable<ILine> lines) Parameters lines IEnumerable<ILine> The lines to parse. Returns Transaction A single Transaction."
  },
  "api/CodaParser.StatementParsers.html": {
    "href": "api/CodaParser.StatementParsers.html",
    "title": "Namespace CodaParser.StatementParsers | CodaParser Documentation",
    "keywords": "Namespace CodaParser.StatementParsers Classes AccountOtherPartyParser Parser for the account of the other party. AccountParser Parser for the account. MessageParser Parser for the message. StatementParser Parser of a single statement. TransactionParser Parser of a transaction."
  },
  "api/CodaParser.Statements.Account.html": {
    "href": "api/CodaParser.Statements.Account.html",
    "title": "Class Account | CodaParser Documentation",
    "keywords": "Class Account Namespace CodaParser.Statements Assembly CodaParser.dll Information abount an account. public class Account Inheritance object Account Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Account(string, string, string, string, string, string) Initializes a new instance of the Account class. public Account(string name, string bic, string companyIdentificationNumber, string number, string currencyCode, string countryCode) Parameters name string The name addressee. bic string The bic of the bank holding the account. companyIdentificationNumber string The identification number of the Belgium-based account holder number string The number of the account. currencyCode string The currency code. countryCode string The country code. Properties Bic Gets the bic of the bank holding the account public string Bic { get; } Property Value string CompanyIdentificationNumber Gets the identification number of the Belgium-based account holder public string CompanyIdentificationNumber { get; } Property Value string CountryCode Gets the country code. public string CountryCode { get; } Property Value string CurrencyCode Gets the currency code. public string CurrencyCode { get; } Property Value string Name Gets the name addressee public string Name { get; } Property Value string Number Gets the number of the account. public string Number { get; } Property Value string"
  },
  "api/CodaParser.Statements.AccountOtherParty.html": {
    "href": "api/CodaParser.Statements.AccountOtherParty.html",
    "title": "Class AccountOtherParty | CodaParser Documentation",
    "keywords": "Class AccountOtherParty Namespace CodaParser.Statements Assembly CodaParser.dll Information about the account of the other party. public class AccountOtherParty Inheritance object AccountOtherParty Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountOtherParty(string, string, string, string) Initializes a new instance of the AccountOtherParty class. public AccountOtherParty(string name, string bic, string number, string currencyCode) Parameters name string The counterparty's name. bic string The counterparty's bic. number string The counterparty's account number. currencyCode string The counterparty's currency code. Properties Bic Gets the counterparty's bic. public string Bic { get; } Property Value string CurrencyCode Gets the counterparty's currency code. public string CurrencyCode { get; } Property Value string Name Gets the counterparty's name. public string Name { get; } Property Value string Number Gets the counterparty's account number. public string Number { get; } Property Value string"
  },
  "api/CodaParser.Statements.Statement.html": {
    "href": "api/CodaParser.Statements.Statement.html",
    "title": "Class Statement | CodaParser Documentation",
    "keywords": "Class Statement Namespace CodaParser.Statements Assembly CodaParser.dll A statement for a change in the balance.. public class Statement Inheritance object Statement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Statement(DateTime, Account, decimal, decimal, string, IEnumerable<Transaction>) Initializes a new Statement class. public Statement(DateTime date, Account account, decimal initialBalance, decimal newBalance, string informationalMessage, IEnumerable<Transaction> transactions) Parameters date DateTime The execution date. account Account The changed account. initialBalance decimal The initial balance. newBalance decimal The new balance. informationalMessage string An informational message. transactions IEnumerable<Transaction> The executed transactions. Properties Account Gets the changed account. public Account Account { get; } Property Value Account Date Gets the execution date. public DateTime Date { get; } Property Value DateTime InformationalMessage Gets the informational message. public string InformationalMessage { get; } Property Value string InitialBalance Gets the initial balance. public decimal InitialBalance { get; } Property Value decimal NewBalance Gets the new balance. public decimal NewBalance { get; } Property Value decimal Transactions Gets the executed transactions. public IReadOnlyList<Transaction> Transactions { get; } Property Value IReadOnlyList<Transaction>"
  },
  "api/CodaParser.Statements.Transaction.html": {
    "href": "api/CodaParser.Statements.Transaction.html",
    "title": "Class Transaction | CodaParser Documentation",
    "keywords": "Class Transaction Namespace CodaParser.Statements Assembly CodaParser.dll Information about a single transaction. public class Transaction Inheritance object Transaction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Transaction(AccountOtherParty, int, int, DateTime, DateTime, decimal, string, string?, SepaDirectDebit?) Initializes a new instance of the Transaction class. public Transaction(AccountOtherParty account, int statementSequence, int transactionSequence, DateTime transactionDate, DateTime valutaDate, decimal amount, string message, string? structuredMessage, SepaDirectDebit? sepaDirectDebit) Parameters account AccountOtherParty The account of the other party. statementSequence int The sequence id of the statement. transactionSequence int The sequence id of the transaction. transactionDate DateTime The date where the transaction is executed. valutaDate DateTime The date where the valuta is changed. amount decimal The amount that has been transfered. message string A message that is included in the transaction. structuredMessage string A structured message. sepaDirectDebit SepaDirectDebit The sepa direct debit information. Properties Account Gets the account of the other party. public AccountOtherParty Account { get; } Property Value AccountOtherParty Amount Gets the transferred amount. public decimal Amount { get; } Property Value decimal Message Gets the included message. public string Message { get; } Property Value string SepaDirectDebit Gets the sepa direct debit information. public SepaDirectDebit? SepaDirectDebit { get; } Property Value SepaDirectDebit StatementSequence Gets the sequence id of the statement. public int StatementSequence { get; } Property Value int StructuredMessage Gets the structured message. public string? StructuredMessage { get; } Property Value string TransactionDate Gets the date where the transaction is executed. public DateTime TransactionDate { get; } Property Value DateTime TransactionSequence Gets the sequence id of the transaction. public int TransactionSequence { get; } Property Value int ValutaDate Gets the date when the valuta is changed. public DateTime ValutaDate { get; } Property Value DateTime"
  },
  "api/CodaParser.Statements.html": {
    "href": "api/CodaParser.Statements.html",
    "title": "Namespace CodaParser.Statements | CodaParser Documentation",
    "keywords": "Namespace CodaParser.Statements Classes Account Information abount an account. AccountOtherParty Information about the account of the other party. Statement A statement for a change in the balance.. Transaction Information about a single transaction."
  },
  "api/CodaParser.Values.Account.html": {
    "href": "api/CodaParser.Values.Account.html",
    "title": "Class Account | CodaParser Documentation",
    "keywords": "Class Account Namespace CodaParser.Values Assembly CodaParser.dll Raw information of an account. public class Account Inheritance object Account Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Account(string, string, string) Initializes a new instance of the Account class. public Account(string accountNumberTypeString, string accountInfo, string accountNameInfo) Parameters accountNumberTypeString string The type of the account. accountInfo string The raw information of the account. accountNameInfo string The raw information about the name. Properties Country Gets the country. public Country Country { get; } Property Value Country Currency Gets the currency. public Currency Currency { get; } Property Value Currency Description Gets the account description. public AccountDescription Description { get; } Property Value AccountDescription Name Gets the name of the account holder. public AccountName Name { get; } Property Value AccountName Number Gets the number of the account. public AccountNumber Number { get; } Property Value AccountNumber NumberType Gets the type of the account number. public AccountNumberType NumberType { get; } Property Value AccountNumberType"
  },
  "api/CodaParser.Values.AccountDescription.html": {
    "href": "api/CodaParser.Values.AccountDescription.html",
    "title": "Class AccountDescription | CodaParser Documentation",
    "keywords": "Class AccountDescription Namespace CodaParser.Values Assembly CodaParser.dll The description of an account. public class AccountDescription Inheritance object AccountDescription Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountDescription(string) Initializes a new instance of the AccountDescription class. public AccountDescription(string value) Parameters value string The description of the account. Properties Value Gets the description of the account. public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.AccountFull.html": {
    "href": "api/CodaParser.Values.AccountFull.html",
    "title": "Class AccountFull | CodaParser Documentation",
    "keywords": "Class AccountFull Namespace CodaParser.Values Assembly CodaParser.dll public class AccountFull Inheritance object AccountFull Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountFull(string) public AccountFull(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.AccountName.html": {
    "href": "api/CodaParser.Values.AccountName.html",
    "title": "Class AccountName | CodaParser Documentation",
    "keywords": "Class AccountName Namespace CodaParser.Values Assembly CodaParser.dll public class AccountName Inheritance object AccountName Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountName(string) public AccountName(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.AccountNumber.html": {
    "href": "api/CodaParser.Values.AccountNumber.html",
    "title": "Class AccountNumber | CodaParser Documentation",
    "keywords": "Class AccountNumber Namespace CodaParser.Values Assembly CodaParser.dll public class AccountNumber Inheritance object AccountNumber Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountNumber(string, bool) public AccountNumber(string value, bool isIbanNumber) Parameters value string isIbanNumber bool Properties IsIbanNumber public bool IsIbanNumber { get; } Property Value bool Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.AccountNumberType.html": {
    "href": "api/CodaParser.Values.AccountNumberType.html",
    "title": "Class AccountNumberType | CodaParser Documentation",
    "keywords": "Class AccountNumberType Namespace CodaParser.Values Assembly CodaParser.dll public class AccountNumberType Inheritance object AccountNumberType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountNumberType(string) public AccountNumberType(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.Amount.html": {
    "href": "api/CodaParser.Values.Amount.html",
    "title": "Class Amount | CodaParser Documentation",
    "keywords": "Class Amount Namespace CodaParser.Values Assembly CodaParser.dll public class Amount Inheritance object Amount Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Amount(string, bool) public Amount(string amountAsString, bool includesSign = false) Parameters amountAsString string includesSign bool Properties Value public decimal Value { get; } Property Value decimal"
  },
  "api/CodaParser.Values.ApplicationCode.html": {
    "href": "api/CodaParser.Values.ApplicationCode.html",
    "title": "Class ApplicationCode | CodaParser Documentation",
    "keywords": "Class ApplicationCode Namespace CodaParser.Values Assembly CodaParser.dll public class ApplicationCode Inheritance object ApplicationCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ApplicationCode(string) public ApplicationCode(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.BankIdentificationNumber.html": {
    "href": "api/CodaParser.Values.BankIdentificationNumber.html",
    "title": "Class BankIdentificationNumber | CodaParser Documentation",
    "keywords": "Class BankIdentificationNumber Namespace CodaParser.Values Assembly CodaParser.dll public class BankIdentificationNumber Inheritance object BankIdentificationNumber Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BankIdentificationNumber(string) public BankIdentificationNumber(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.BankReference.html": {
    "href": "api/CodaParser.Values.BankReference.html",
    "title": "Class BankReference | CodaParser Documentation",
    "keywords": "Class BankReference Namespace CodaParser.Values Assembly CodaParser.dll public class BankReference Inheritance object BankReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BankReference(string) public BankReference(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.Bic.html": {
    "href": "api/CodaParser.Values.Bic.html",
    "title": "Class Bic | CodaParser Documentation",
    "keywords": "Class Bic Namespace CodaParser.Values Assembly CodaParser.dll public class Bic Inheritance object Bic Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Bic(string) public Bic(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.CategoryPurpose.html": {
    "href": "api/CodaParser.Values.CategoryPurpose.html",
    "title": "Class CategoryPurpose | CodaParser Documentation",
    "keywords": "Class CategoryPurpose Namespace CodaParser.Values Assembly CodaParser.dll public class CategoryPurpose Inheritance object CategoryPurpose Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryPurpose(string) public CategoryPurpose(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.ClientReference.html": {
    "href": "api/CodaParser.Values.ClientReference.html",
    "title": "Class ClientReference | CodaParser Documentation",
    "keywords": "Class ClientReference Namespace CodaParser.Values Assembly CodaParser.dll public class ClientReference Inheritance object ClientReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientReference(string) public ClientReference(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.CompanyIdentificationNumber.html": {
    "href": "api/CodaParser.Values.CompanyIdentificationNumber.html",
    "title": "Class CompanyIdentificationNumber | CodaParser Documentation",
    "keywords": "Class CompanyIdentificationNumber Namespace CodaParser.Values Assembly CodaParser.dll public class CompanyIdentificationNumber Inheritance object CompanyIdentificationNumber Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CompanyIdentificationNumber(string) public CompanyIdentificationNumber(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.Country.html": {
    "href": "api/CodaParser.Values.Country.html",
    "title": "Class Country | CodaParser Documentation",
    "keywords": "Class Country Namespace CodaParser.Values Assembly CodaParser.dll public class Country Inheritance object Country Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Country(string) public Country(string countryCode) Parameters countryCode string Properties CountryCode public string CountryCode { get; } Property Value string"
  },
  "api/CodaParser.Values.Currency.html": {
    "href": "api/CodaParser.Values.Currency.html",
    "title": "Class Currency | CodaParser Documentation",
    "keywords": "Class Currency Namespace CodaParser.Values Assembly CodaParser.dll public class Currency Inheritance object Currency Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Currency(string) public Currency(string currencyCode) Parameters currencyCode string Properties CurrencyCode public string CurrencyCode { get; } Property Value string"
  },
  "api/CodaParser.Values.Date.html": {
    "href": "api/CodaParser.Values.Date.html",
    "title": "Class Date | CodaParser Documentation",
    "keywords": "Class Date Namespace CodaParser.Values Assembly CodaParser.dll public class Date Inheritance object Date Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Date(string) public Date(string dateString) Parameters dateString string Properties Value public DateTime Value { get; } Property Value DateTime"
  },
  "api/CodaParser.Values.ExternalApplicationCode.html": {
    "href": "api/CodaParser.Values.ExternalApplicationCode.html",
    "title": "Class ExternalApplicationCode | CodaParser Documentation",
    "keywords": "Class ExternalApplicationCode Namespace CodaParser.Values Assembly CodaParser.dll public class ExternalApplicationCode Inheritance object ExternalApplicationCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExternalApplicationCode(string) public ExternalApplicationCode(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.FileReference.html": {
    "href": "api/CodaParser.Values.FileReference.html",
    "title": "Class FileReference | CodaParser Documentation",
    "keywords": "Class FileReference Namespace CodaParser.Values Assembly CodaParser.dll public class FileReference Inheritance object FileReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileReference(string) public FileReference(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.GlobalizationCode.html": {
    "href": "api/CodaParser.Values.GlobalizationCode.html",
    "title": "Class GlobalizationCode | CodaParser Documentation",
    "keywords": "Class GlobalizationCode Namespace CodaParser.Values Assembly CodaParser.dll public class GlobalizationCode Inheritance object GlobalizationCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GlobalizationCode(string) public GlobalizationCode(string value) Parameters value string Properties Value public int Value { get; } Property Value int"
  },
  "api/CodaParser.Values.IsoReasonReturnCode.html": {
    "href": "api/CodaParser.Values.IsoReasonReturnCode.html",
    "title": "Class IsoReasonReturnCode | CodaParser Documentation",
    "keywords": "Class IsoReasonReturnCode Namespace CodaParser.Values Assembly CodaParser.dll public class IsoReasonReturnCode Inheritance object IsoReasonReturnCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IsoReasonReturnCode(string) public IsoReasonReturnCode(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.Message.html": {
    "href": "api/CodaParser.Values.Message.html",
    "title": "Class Message | CodaParser Documentation",
    "keywords": "Class Message Namespace CodaParser.Values Assembly CodaParser.dll public class Message Inheritance object Message Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Message(string) public Message(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.MessageOrStructuredMessage.html": {
    "href": "api/CodaParser.Values.MessageOrStructuredMessage.html",
    "title": "Class MessageOrStructuredMessage | CodaParser Documentation",
    "keywords": "Class MessageOrStructuredMessage Namespace CodaParser.Values Assembly CodaParser.dll public class MessageOrStructuredMessage Inheritance object MessageOrStructuredMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MessageOrStructuredMessage(string, TransactionCode) public MessageOrStructuredMessage(string value, TransactionCode transactionCode) Parameters value string transactionCode TransactionCode Properties Message public Message? Message { get; } Property Value Message StructuredMessage public StructuredMessage? StructuredMessage { get; } Property Value StructuredMessage"
  },
  "api/CodaParser.Values.PaperStatementSequenceNumber.html": {
    "href": "api/CodaParser.Values.PaperStatementSequenceNumber.html",
    "title": "Class PaperStatementSequenceNumber | CodaParser Documentation",
    "keywords": "Class PaperStatementSequenceNumber Namespace CodaParser.Values Assembly CodaParser.dll public class PaperStatementSequenceNumber Inheritance object PaperStatementSequenceNumber Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PaperStatementSequenceNumber(string) public PaperStatementSequenceNumber(string paperStatementSequenceNumber) Parameters paperStatementSequenceNumber string Fields Value public int Value Field Value int"
  },
  "api/CodaParser.Values.Purpose.html": {
    "href": "api/CodaParser.Values.Purpose.html",
    "title": "Class Purpose | CodaParser Documentation",
    "keywords": "Class Purpose Namespace CodaParser.Values Assembly CodaParser.dll public class Purpose Inheritance object Purpose Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Purpose(string) public Purpose(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.RelatedReference.html": {
    "href": "api/CodaParser.Values.RelatedReference.html",
    "title": "Class RelatedReference | CodaParser Documentation",
    "keywords": "Class RelatedReference Namespace CodaParser.Values Assembly CodaParser.dll public class RelatedReference Inheritance object RelatedReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RelatedReference(string) public RelatedReference(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.SepaDirectDebit.html": {
    "href": "api/CodaParser.Values.SepaDirectDebit.html",
    "title": "Class SepaDirectDebit | CodaParser Documentation",
    "keywords": "Class SepaDirectDebit Namespace CodaParser.Values Assembly CodaParser.dll public class SepaDirectDebit Inheritance object SepaDirectDebit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SepaDirectDebit(string) public SepaDirectDebit(string value) Parameters value string Properties CreditorIdentificationCode public string CreditorIdentificationCode { get; } Property Value string MandateReference public string MandateReference { get; } Property Value string PaidReason public int PaidReason { get; } Property Value int Scheme public int Scheme { get; } Property Value int SettlementDate public Date SettlementDate { get; } Property Value Date Type public int Type { get; } Property Value int"
  },
  "api/CodaParser.Values.SequenceNumber.html": {
    "href": "api/CodaParser.Values.SequenceNumber.html",
    "title": "Class SequenceNumber | CodaParser Documentation",
    "keywords": "Class SequenceNumber Namespace CodaParser.Values Assembly CodaParser.dll public class SequenceNumber Inheritance object SequenceNumber Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SequenceNumber(string) public SequenceNumber(string sequenceNumber) Parameters sequenceNumber string Properties Value public int Value { get; } Property Value int"
  },
  "api/CodaParser.Values.SequenceNumberDetail.html": {
    "href": "api/CodaParser.Values.SequenceNumberDetail.html",
    "title": "Class SequenceNumberDetail | CodaParser Documentation",
    "keywords": "Class SequenceNumberDetail Namespace CodaParser.Values Assembly CodaParser.dll public class SequenceNumberDetail Inheritance object SequenceNumberDetail Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SequenceNumberDetail(string) public SequenceNumberDetail(string sequenceNumberDetail) Parameters sequenceNumberDetail string Properties Value public int Value { get; } Property Value int"
  },
  "api/CodaParser.Values.StatementSequenceNumber.html": {
    "href": "api/CodaParser.Values.StatementSequenceNumber.html",
    "title": "Class StatementSequenceNumber | CodaParser Documentation",
    "keywords": "Class StatementSequenceNumber Namespace CodaParser.Values Assembly CodaParser.dll public class StatementSequenceNumber Inheritance object StatementSequenceNumber Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatementSequenceNumber(string) public StatementSequenceNumber(string value) Parameters value string Properties Value public int Value { get; } Property Value int"
  },
  "api/CodaParser.Values.StructuredMessage.html": {
    "href": "api/CodaParser.Values.StructuredMessage.html",
    "title": "Class StructuredMessage | CodaParser Documentation",
    "keywords": "Class StructuredMessage Namespace CodaParser.Values Assembly CodaParser.dll public class StructuredMessage Inheritance object StructuredMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StructuredMessage(string, TransactionCode) public StructuredMessage(string value, TransactionCode transactionCode) Parameters value string transactionCode TransactionCode Properties SepaDirectDebit public SepaDirectDebit? SepaDirectDebit { get; } Property Value SepaDirectDebit StructuredMessageFull public string StructuredMessageFull { get; } Property Value string StructuredMessageType public string StructuredMessageType { get; } Property Value string Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.TransactionCode.html": {
    "href": "api/CodaParser.Values.TransactionCode.html",
    "title": "Class TransactionCode | CodaParser Documentation",
    "keywords": "Class TransactionCode Namespace CodaParser.Values Assembly CodaParser.dll public class TransactionCode Inheritance object TransactionCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionCode(string) public TransactionCode(string value) Parameters value string Properties Category public TransactionCodeCategory Category { get; } Property Value TransactionCodeCategory Family public TransactionCodeFamily Family { get; } Property Value TransactionCodeFamily Operation public TransactionCodeOperation Operation { get; } Property Value TransactionCodeOperation Type public TransactionCodeType Type { get; } Property Value TransactionCodeType"
  },
  "api/CodaParser.Values.TransactionCodeCategory.html": {
    "href": "api/CodaParser.Values.TransactionCodeCategory.html",
    "title": "Class TransactionCodeCategory | CodaParser Documentation",
    "keywords": "Class TransactionCodeCategory Namespace CodaParser.Values Assembly CodaParser.dll public class TransactionCodeCategory Inheritance object TransactionCodeCategory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionCodeCategory(string) public TransactionCodeCategory(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.TransactionCodeFamily.html": {
    "href": "api/CodaParser.Values.TransactionCodeFamily.html",
    "title": "Class TransactionCodeFamily | CodaParser Documentation",
    "keywords": "Class TransactionCodeFamily Namespace CodaParser.Values Assembly CodaParser.dll public class TransactionCodeFamily Inheritance object TransactionCodeFamily Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionCodeFamily(string) public TransactionCodeFamily(string value) Parameters value string Fields Value public string Value Field Value string"
  },
  "api/CodaParser.Values.TransactionCodeOperation.html": {
    "href": "api/CodaParser.Values.TransactionCodeOperation.html",
    "title": "Class TransactionCodeOperation | CodaParser Documentation",
    "keywords": "Class TransactionCodeOperation Namespace CodaParser.Values Assembly CodaParser.dll public class TransactionCodeOperation Inheritance object TransactionCodeOperation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionCodeOperation(string) public TransactionCodeOperation(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.TransactionCodeType.html": {
    "href": "api/CodaParser.Values.TransactionCodeType.html",
    "title": "Class TransactionCodeType | CodaParser Documentation",
    "keywords": "Class TransactionCodeType Namespace CodaParser.Values Assembly CodaParser.dll public class TransactionCodeType Inheritance object TransactionCodeType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionCodeType(string) public TransactionCodeType(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.TransactionReference.html": {
    "href": "api/CodaParser.Values.TransactionReference.html",
    "title": "Class TransactionReference | CodaParser Documentation",
    "keywords": "Class TransactionReference Namespace CodaParser.Values Assembly CodaParser.dll public class TransactionReference Inheritance object TransactionReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransactionReference(string) public TransactionReference(string value) Parameters value string Fields Value public string Value Field Value string"
  },
  "api/CodaParser.Values.VersionCode.html": {
    "href": "api/CodaParser.Values.VersionCode.html",
    "title": "Class VersionCode | CodaParser Documentation",
    "keywords": "Class VersionCode Namespace CodaParser.Values Assembly CodaParser.dll public class VersionCode Inheritance object VersionCode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VersionCode(string) public VersionCode(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/CodaParser.Values.html": {
    "href": "api/CodaParser.Values.html",
    "title": "Namespace CodaParser.Values | CodaParser Documentation",
    "keywords": "Namespace CodaParser.Values Classes Account Raw information of an account. AccountDescription The description of an account. AccountFull AccountName AccountNumber AccountNumberType Amount ApplicationCode BankIdentificationNumber BankReference Bic CategoryPurpose ClientReference CompanyIdentificationNumber Country Currency Date ExternalApplicationCode FileReference GlobalizationCode IsoReasonReturnCode Message MessageOrStructuredMessage PaperStatementSequenceNumber Purpose RelatedReference SepaDirectDebit SequenceNumber SequenceNumberDetail StatementSequenceNumber StructuredMessage TransactionCode TransactionCodeCategory TransactionCodeFamily TransactionCodeOperation TransactionCodeType TransactionReference VersionCode"
  },
  "api/CodaParser.html": {
    "href": "api/CodaParser.html",
    "title": "Namespace CodaParser | CodaParser Documentation",
    "keywords": "Namespace CodaParser Classes Helpers Class with helper methods. LinesParser Parse raw strings to a structured line. Parser Parse raw lines to statements. Interfaces IParser<T> Interface for parsing list of string or a file to a specific type."
  },
  "docs/acknowledgements.html": {
    "href": "docs/acknowledgements.html",
    "title": "Acknowledgements | CodaParser Documentation",
    "keywords": "Acknowledgements CodaParser is built upon the foundation laid by several projects and communities. We extend our gratitude to the following: supervos/coda-parser by Christophe Devos for providing the original implementation and inspiration. wimverstuyf/php-coda-parser project for additional insights and features. Open-Source Community: Thanks to the open-source community for their invaluable contributions, feedback, and support. Developers and Contributors: Special thanks to all the contributors who have helped improve CodaParser through code, documentation, and testing. Your collective efforts have been instrumental in shaping CodaParser into a reliable and efficient tool for parsing CODA banking files."
  },
  "docs/api-reference.html": {
    "href": "docs/api-reference.html",
    "title": "API Reference | CodaParser Documentation",
    "keywords": "API Reference CodaParser provides a clean and intuitive API for parsing CODA files into structured data. Below is an overview of the key components and interfaces. IParser<T> Interface The IParser<T> interface defines the contract for parsing CODA files into a specific type. namespace CodaParser; /// <summary> /// Interface for parsing a list of strings or a file to a specific type. /// </summary> /// <typeparam name=\"T\">The result type of the parsing.</typeparam> public interface IParser<out T> { /// <summary> /// Parses a collection of CODA lines into their matching type. /// </summary> /// <param name=\"codaLines\">The strings to parse.</param> /// <returns>The parsed result.</returns> IEnumerable<T> Parse(IEnumerable<string> codaLines); /// <summary> /// Reads the content of the specified file and parses it into the matching type. /// </summary> /// <param name=\"codaFile\">Location of the file to parse.</param> /// <returns>The parsed result.</returns> IEnumerable<T> ParseFile(string codaFile); } Implementing IParser<T> To create a custom parser, implement the IParser<T> interface: using CodaParser; using System.Collections.Generic; public class CustomParser : IParser<Statement> { public IEnumerable<Statement> Parse(IEnumerable<string> codaLines) { // Implement your parsing logic here } public IEnumerable<Statement> ParseFile(string codaFile) { var lines = File.ReadAllLines(codaFile); return Parse(lines); } } Parser Class The Parser class is a concrete implementation of the IParser<Statement> interface, providing methods to parse CODA files into Statement objects. Methods IEnumerable<Statement> Parse(IEnumerable<string> codaLines) Parses a collection of CODA lines and returns the corresponding Statement objects. IEnumerable<Statement> ParseFile(string codaFile) Reads the content of the specified CODA file and parses it into Statement objects. Statement Class Represents a single banking statement extracted from a CODA file. Properties Date (DateTime): The date of the statement. Account (Account): The account information associated with the statement. InitialBalance (decimal): The initial balance of the account at the start of the statement period. NewBalance (decimal): The balance of the account after all transactions have been processed. InformationalMessage (string): Any informational messages included in the statement. Transactions (IEnumerable<Transaction>): A collection of transactions executed during the statement period. Example public class Statement { public DateTime Date { get; set; } public Account Account { get; set; } public decimal InitialBalance { get; set; } public decimal NewBalance { get; set; } public string InformationalMessage { get; set; } public IEnumerable<Transaction> Transactions { get; set; } } Account Class Represents account details within a statement. Properties Name (string): The name of the account holder. Number (string): The account number. Type (string): The type of account (e.g., Checking, Savings). Transaction Class Represents a single transaction within a statement. Properties Date (DateTime): The date of the transaction. Description (string): A description of the transaction. Amount (decimal): The amount involved in the transaction. Balance (decimal): The account balance after the transaction. For more detailed information and advanced usage, refer to the official documentation."
  },
  "docs/contributing.html": {
    "href": "docs/contributing.html",
    "title": "Contributing | CodaParser Documentation",
    "keywords": "Contributing We welcome contributions to the CodaParser project! By contributing, you help improve the library and assist other developers in effectively parsing CODA banking files. Code of Conduct Please adhere to the Code of Conduct when interacting with the project. How to Contribute Follow these steps to contribute to CodaParser: 1. Fork the Repository Start by forking the CodaParser repository to your GitHub account. 2. Clone Your Fork Clone the forked repository to your local machine: git clone https://github.com/phmatray/CodaParser.git cd CodaParser 3. Create a Feature Branch Create a new branch for your feature or bug fix: git checkout -b feature/YourFeature 4. Make Your Changes Implement your feature or fix the bug. Ensure your code adheres to the project's coding standards and includes appropriate tests. 5. Commit Your Changes Use conventional commit messages to describe your changes. This helps maintain a consistent commit history. Example Commit Message feat(parser): add support for new transaction types 6. Push to Your Fork Push your changes to your forked repository: git push origin feature/YourFeature 7. Open a Pull Request Navigate to the original CodaParser repository and open a pull request from your forked repository's feature branch. 8. Respond to Feedback Maintain an open line of communication with the project maintainers. Address any feedback or requested changes promptly. Reporting Issues If you encounter any issues or bugs, please report them using the issue tracker. Include detailed information to help us reproduce and address the problem effectively. Development Guidelines Coding Standards: Follow the existing coding conventions used throughout the project. Testing: Write unit tests for new features and ensure existing tests pass. Documentation: Update documentation as necessary to reflect your changes. Commit Messages: Use clear and descriptive commit messages following the Conventional Commits guidelines. Thank You! Your contributions are greatly appreciated and help make CodaParser a valuable tool for the developer community. Thank you for your interest and support!"
  },
  "docs/features.html": {
    "href": "docs/features.html",
    "title": "Features | CodaParser Documentation",
    "keywords": "Features CodaParser offers a robust set of features designed to facilitate the parsing of Belgian CODA banking files within .NET applications. Comprehensive .NET Standard 2.0 Support Compatibility: Compatible with both .NET Framework and .NET Core, ensuring broad usability across different project types and environments. Modern C# Features: Utilizes the latest C# language enhancements, providing improved performance and code readability. Reliable Parsing Mechanism Accurate Data Extraction: Precisely parses CODA files, extracting essential information such as transactions, balances, and account details. Error Handling: Robust error handling mechanisms to manage and report parsing issues effectively. Easy Integration Simple API: Offers a straightforward API (IParser<T>) that can be easily integrated into existing projects. Extensible: Designed to be easily extendable, allowing developers to add custom features or processing logic as needed. Updated Dependencies Stability and Security: Leverages the latest NuGet packages, ensuring better stability and security for your applications. Active Maintenance: Regular updates to dependencies to keep the library aligned with the evolving .NET ecosystem. Extensibility Custom Processing: Allows for custom processing of parsed data, enabling developers to tailor the library to specific project requirements. Modular Design: Modular architecture facilitates easy extension and maintenance. Based on a Proven Foundation Forked from a Trusted Source: Based on the well-established supervos/coda-parser project by Christophe Devos. Community-Driven: Benefits from community contributions and support, ensuring continuous improvement and feature enhancements. CodaParser is committed to providing a reliable and efficient solution for parsing CODA files, empowering developers to manage financial data with ease and confidence."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | CodaParser Documentation",
    "keywords": "Getting Started This guide will help you set up and start using CodaParser in your .NET projects. Prerequisites .NET SDK: Ensure you have the .NET 8 SDK installed. Git: Required for cloning the repository and version control. Optional Tools: DocFX: For generating documentation. Nuke: For build automation (if using the provided Nuke build script). Installation NuGet Package CodaParser is available as a NuGet package. Install it using the following commands: Using .NET CLI dotnet add package CodaParser Using Package Manager Console Install-Package CodaParser Building from Source If you prefer to build the library yourself, follow these steps: Clone the Repository git clone https://github.com/phmatray/CodaParser.git cd CodaParser Restore Dependencies Ensure you have the .NET SDK installed. Then run: dotnet restore Build the Project dotnet build Use the Library Reference the built DLLs in your project by adding them to your project's dependencies. Basic Usage Below is a simple example demonstrating how to parse a CODA file and iterate through the statements and transactions using the IParser<T> interface. using CodaParser; using System.Collections.Generic; // Instantiate the parser (assuming a concrete implementation is available) IParser<Statement> parser = new Parser(); // Parse the CODA file IEnumerable<Statement> statements = parser.ParseFile(\"path/to/coda-file.cod\"); // Iterate through the statements and transactions foreach (var statement in statements) { Console.WriteLine($\"Date: {statement.Date:yyyy-MM-dd}\"); foreach (var transaction in statement.Transactions) { Console.WriteLine($\"{transaction.Account.Name}: {transaction.Amount}\"); } Console.WriteLine($\"New Balance: {statement.NewBalance}\"); Console.WriteLine(new string('-', 40)); } Minimal API Example (.NET 8) Leveraging .NET 8's minimal API features, you can create a streamlined application without explicit Program and Main methods: using CodaParser; using System.Collections.Generic; IParser<Statement> parser = new Parser(); IEnumerable<Statement> statements = parser.ParseFile(\"path/to/coda-file.cod\"); foreach (var statement in statements) { Console.WriteLine($\"Date: {statement.Date:yyyy-MM-dd}\"); foreach (var transaction in statement.Transactions) { Console.WriteLine($\"{transaction.Account.Name}: {transaction.Amount}\"); } Console.WriteLine($\"New Balance: {statement.NewBalance}\"); Console.WriteLine(new string('-', 40)); } Running the Example Create a New .NET Project dotnet new console -n CodaParserDemo cd CodaParserDemo Add CodaParser Package dotnet add package CodaParser Replace Program.cs with the Example Code Run the Application dotnet run Ensure that the path to your CODA file is correct. The application will parse the file and display the transactions in the console."
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | CodaParser Documentation",
    "keywords": "Introduction CodaParser is designed to simplify the process of parsing Belgian CODA banking files within .NET applications. By leveraging modern C# features and adhering to the latest .NET standards, CodaParser ensures both performance and reliability. Originally forked from supervos/coda-parser, CodaParser enhances functionality and updates dependencies to better fit the evolving .NET ecosystem. What is CODA? CODA (Common Organization Data Access) is a standardized format used by Belgian banks to communicate transaction data. Parsing CODA files is essential for applications that handle financial data, enabling them to process transactions, balances, and other relevant information efficiently. Why CodaParser? Reliability: Based on a well-established project, ensuring accurate and dependable parsing. Extensibility: Designed to be easily extendable, allowing developers to add custom features or processing logic. Modern Standards: Utilizes the latest C# and .NET features for optimal performance and maintainability. Whether you're building a personal finance app or an enterprise-level financial system, CodaParser provides the tools necessary to handle CODA files seamlessly."
  },
  "docs/license.html": {
    "href": "docs/license.html",
    "title": "License | CodaParser Documentation",
    "keywords": "License This project is licensed under the GNU GENERAL PUBLIC LICENSE Version 2. You are free to use, modify, and distribute this software under the terms of the GNU GPLv2. For more details, please refer to the LICENSE file included in this repository."
  },
  "index.html": {
    "href": "index.html",
    "title": "CodaParser Documentation | CodaParser Documentation",
    "keywords": "CodaParser CodaParser is a modern C# .NET library for parsing Belgian CODA banking files. It is a fork of supervos/coda-parser by Christophe Devos, bringing enhanced functionality and updated dependencies to the .NET ecosystem. Quick Links Features Getting Started API Reference Contributing License Acknowledgements Documentation"
  }
}